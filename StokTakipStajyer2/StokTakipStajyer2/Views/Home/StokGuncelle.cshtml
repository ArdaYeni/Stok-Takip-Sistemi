@model StokTakipStajyer2.Models.STOK

@{
    ViewBag.Title = "Stok Güncelle";
    var statuOptions = new List<SelectListItem>
{
        new SelectListItem { Text = "True", Value = "true" },
        new SelectListItem { Text = "False", Value = "false" }
    };
}

<h2>Stok Güncelle</h2>

@using (Html.BeginForm("StokGuncelle", "Home", FormMethod.Post))
{
    @Html.HiddenFor(m => m.STOK_ID)
    <div class="form-group">
        <label for="STOK_AD">Stok Adı</label><br />
        @Html.TextBoxFor(m => m.STOK_AD, new { @class = "form-control", @placeholder = "Stok Adı" })
    </div>
    <div class="form-group">
        <label for="STOK_DETAY">Stok Detay</label><br />
        @Html.TextBoxFor(m => m.STOK_DETAY, new { @class = "form-control", @placeholder = "Stok Detay" })
    </div>
    <div class="form-group">
        <label for="STOK_MARKA">Stok Marka</label><br />
        @Html.TextBoxFor(m => m.STOK_MARKA, new { @class = "form-control", @placeholder = "Stok Marka" })
    </div>
    <div class="form-group">
        <label for="STOK_OLCUBIRIM">Ölçü Birimi</label><br />
        @Html.DropDownListFor(m => m.STOK_OLCUBIRIM, (SelectList)ViewBag.OlcuBirimleri, "Seçiniz", new { @class = "form-control" })
    </div>
    <div class="form-group">
        <label for="MIN_MIKTAR">Minimum Miktar</label><br />
        @Html.TextBoxFor(m => m.MIN_MIKTAR, new { @class = "form-control", @placeholder = "Minimum Miktar" })
    </div>
    <div class="form-group">
        <label for="STATU">Statü</label><br />
        @Html.DropDownListFor(m => m.STATU, statuOptions, "Seçiniz", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.STATU, "", new { @class = "text-danger" })
    </div>
    <button type="submit" class="btn btn-primary">Güncelle</button>
}

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success mt-3">
        @TempData["SuccessMessage"]
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger mt-3">
        @TempData["ErrorMessage"]
    </div>
}
